cpp dp:
双字符串匹配问题，时间复杂度O（m+n）

class Solution {
public:
       bool isMatch(string s, string p) {
        int n = s.length(),m = p.length();
        vector<vector<bool>> dp(n + 1,vector<bool> (m + 1,false));
        dp[0][0] = true;
        for(int i = 1 ;i <= m ;i ++)
        {
            if(p[i - 1] == '*' && dp[0][i - 1]) dp[0][i] = true;
            else break;
        }
        for(int i = 1 ; i <= n ; i ++)
        {
            for(int j = 1; j <= m ;j ++)
            {
                if(s[i - 1] == p[j - 1] || p[j - 1] == '?')
                    dp[i][j] = dp[i - 1][j - 1];
                else if(p[j - 1] == '*')
                    dp[i][j] = dp[i - 1][j] | dp[i][j - 1];
            }
        }
        return dp[n][m];
    }
};

java   2D table：
public class Solution {
    public boolean isMatch(String s, String p) {
        boolean[][] match=new boolean[s.length()+1][p.length()+1];
        match[s.length()][p.length()]=true;
        for(int i=p.length()-1;i>=0;i--){
            if(p.charAt(i)!='*')
                break;
            else
                match[s.length()][i]=true;
        }
        for(int i=s.length()-1;i>=0;i--){
            for(int j=p.length()-1;j>=0;j--){
                if(s.charAt(i)==p.charAt(j)||p.charAt(j)=='?')
                        match[i][j]=match[i+1][j+1];
                else if(p.charAt(j)=='*')
                        match[i][j]=match[i+1][j]||match[i][j+1];
                else
                    match[i][j]=false;
            }
        }
        return match[0][0];
    }
}
