
java  solution：非空链表的返回，返回另外一个。采用迭代/递归。

class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1== null) return l2;
        if(l2== null) return l1;
        ListNode head     = l1.val <l2.val? l1:l2;
        ListNode nonHead  = l1.val <l2.val? l2:l1;
        
        head.next =mergeTwoLists(head.next,nonHead);
        
        return head;
    }
}


cpp solution:
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
        if(l1 == NULL) return l2;
        if(l2 == NULL) return l1;
        
        if(l1->val < l2->val) {
            l1->next = mergeTwoLists(l1->next, l2);
            return l1;
        } else {
            l2->next = mergeTwoLists(l2->next, l1);
            return l2;
        }
    }
};
