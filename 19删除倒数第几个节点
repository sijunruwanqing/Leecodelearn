
cpp solution:

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* ext_head = new ListNode(0);
        ext_head -> next = head;

        ListNode* first = ext_head;
        ListNode* second = ext_head;

        for (int i = 0; i <= n; i++)
            first = first -> next;

        while (first != NULL) {
            first = first -> next;
            second = second -> next;
        }
        second -> next = second -> next -> next;

        return ext_head -> next;
    }
};


java   solution:
public ListNode removeNthFromEnd(ListNode head, int n) {
    
    ListNode start = new ListNode(0);
    ListNode slow = start, fast = start;
    slow.next = head;
    
    //快速移动使差距变小
    for(int i=1; i<=n+1; i++)
	{
        fast = fast.next;
    }
	
    //移动到末尾，保持间距。
    while(fast != null) {
        slow = slow.next;
        fast = fast.next;
    }
	
    //跳过一些节点
    slow.next = slow.next.next;
    return start.next;
}
