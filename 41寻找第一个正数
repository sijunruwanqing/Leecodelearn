java 寻找第一个丢失的正整数
不用额外空间的桶排序
最多执行n次，所以时间复杂度为O(n)






class Solution{
public:
    int firstMissingPositive(vector<int>& nums) 
    {
        
        int n = nums.size();

        for(int i = 0; i < n; ++ i)
            while(nums[i] > 0 && nums[i] <= n   &&  nums[nums[i] - 1] !=  nums[i])
            swap(nums[i], nums[nums[i] - 1]);

        for(int i = 0; i < n; ++ i)
            if(nums[i] != i + 1)
                return i + 1;

        return n + 1;
    }
};