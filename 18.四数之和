cpp great solution:
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> total;
        int n = nums.size();
        if(n<4)  
		return total;
        sort(nums.begin(),nums.end());    //依然排序
        for(int i=0;i<n-3;i++)
        {
            if(i>0&&nums[i]==nums[i-1]) 
			continue;
            if(nums[i]+nums[i+1]+nums[i+2]+nums[i+3]>target)
			break;
            if(nums[i]+nums[n-3]+nums[n-2]+nums[n-1]<target) 
			continue;
            for(int j=i+1;j<n-2;j++)
            {
                if(j>i+1&&nums[j]==nums[j-1]) continue;
                if(nums[i]+nums[j]+nums[j+1]+nums[j+2]>target) break;
                if(nums[i]+nums[j]+nums[n-2]+nums[n-1]<target) continue;
                int left=j+1,right=n-1;
                while(left<right){
                    int sum=nums[left]+nums[right]+nums[i]+nums[j];
                    if(sum<target) 
						left++;
                    else if(sum>target) right--;
                    else{
                        total.push_back(vector<int>{nums[i],nums[j],nums[left],nums[right]});
                        do{left++;}
						while(nums[left]==nums[left-1]&&left<right);
                        do{right--;}
						while(nums[right]==nums[right+1]&&left<right);
                    }
                }
            }
        }
        return total;
    }
};



java:
public class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> list = new ArrayList<List<Integer>>();
        Arrays.sort(nums);
        int second = 0, third = 0, nexti = 0, nextj = 0;
        for(int i=0, L=nums.length; i<L-3; i++) {
            if(nums[i]<<2 > target) 
			return list; // 返回字符串
            for(int j=L-1; j>i+2; j--) {
                if(nums[j]<<2 < target)
				break; //返回
                int rem = target-nums[i]-nums[j];
                int lo = i+1, hi=j-1;
                while(lo<hi) {
                    int sum = nums[lo] + nums[hi];
                    if(sum>rem) --hi;
                    else if(sum<rem) ++lo;
                    else {
                        list.add(Arrays.asList(nums[i],nums[lo],nums[hi],nums[j]));
                        while(++lo<=hi && nums[lo-1]==nums[lo]) continue; // avoid duplicate results
                        while(--hi>=lo && nums[hi]==nums[hi+1]) continue; // avoid duplicate results
                    }
                }
                while(j>=1 && nums[j]==nums[j-1]) --j; // 忽略内部字符
            }
            while(i<L-1 && nums[i]==nums[i+1]) ++i; // 忽略外部字符
        }
        return list;
    }
}